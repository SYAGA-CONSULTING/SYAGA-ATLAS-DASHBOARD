#!/bin/bash

# Script de d√©ploiement automatique vers Azure Static Web App
# ATLAS Dashboard v0.23

echo "üöÄ D√âPLOIEMENT ATLAS DASHBOARD SUR AZURE STATIC WEB APP"
echo "=================================================="

# Configuration
RESOURCE_GROUP="rg-syaga-atlas"
APP_NAME="syaga-atlas-dashboard"

# V√©rifier connexion Azure
echo "üìå V√©rification connexion Azure..."
if ! az account show &>/dev/null; then
    echo "‚ùå Non connect√© √† Azure. Connexion..."
    az login
fi

# Afficher le compte actuel
echo "‚úÖ Connect√© en tant que:"
az account show --query "[name, user.name]" -o tsv

# Cr√©er un dossier de d√©ploiement propre
echo "üìÅ Pr√©paration des fichiers..."
rm -rf ./deploy-dist
mkdir -p ./deploy-dist

# Copier tous les fichiers HTML
cp *.html ./deploy-dist/
cp -r css ./deploy-dist/ 2>/dev/null || true
cp -r js ./deploy-dist/ 2>/dev/null || true
cp -r assets ./deploy-dist/ 2>/dev/null || true

# Cr√©er un index.html qui redirige vers le dashboard unifi√©
cat > ./deploy-dist/index.html << 'EOF'
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="refresh" content="0; url=dashboard-atlas-unified.html">
    <title>ATLAS Dashboard - Redirection</title>
</head>
<body>
    <p>Redirection vers <a href="dashboard-atlas-unified.html">ATLAS Dashboard</a>...</p>
</body>
</html>
EOF

# Lister les fichiers √† d√©ployer
echo "üìã Fichiers √† d√©ployer:"
ls -la ./deploy-dist/*.html | head -20

# D√©ployer avec Azure CLI
echo "üåê D√©ploiement sur Azure Static Web App..."
echo "   App: $APP_NAME"
echo "   Resource Group: $RESOURCE_GROUP"

# Option 1: Si SWA CLI est install√©
if command -v swa &> /dev/null; then
    echo "üì¶ Utilisation de SWA CLI..."
    swa deploy ./deploy-dist --deployment-token $(az staticwebapp secrets list --name $APP_NAME --resource-group $RESOURCE_GROUP --query "properties.apiKey" -o tsv)
else
    # Option 2: Utiliser GitHub Actions ou m√©thode directe
    echo "üì¶ D√©ploiement via Azure CLI..."
    
    # R√©cup√©rer le token de d√©ploiement
    DEPLOYMENT_TOKEN=$(az staticwebapp secrets list \
        --name $APP_NAME \
        --resource-group $RESOURCE_GROUP \
        --query "properties.apiKey" -o tsv)
    
    if [ -z "$DEPLOYMENT_TOKEN" ]; then
        echo "‚ùå Impossible de r√©cup√©rer le token de d√©ploiement"
        echo "Essayez: az staticwebapp secrets list --name $APP_NAME --resource-group $RESOURCE_GROUP"
        exit 1
    fi
    
    echo "‚úÖ Token r√©cup√©r√©"
    
    # Cr√©er un zip pour le d√©ploiement
    cd deploy-dist
    zip -r ../deploy.zip .
    cd ..
    
    echo "üì§ Upload en cours..."
    
    # Utiliser l'API de d√©ploiement
    curl -X POST \
        "https://${APP_NAME}.azurestaticapps.net/api/zipdeploy" \
        -H "Authorization: Bearer $DEPLOYMENT_TOKEN" \
        -H "Content-Type: application/zip" \
        --data-binary @deploy.zip \
        --max-time 300
fi

# Afficher l'URL
echo ""
echo "‚úÖ D√âPLOIEMENT TERMIN√â!"
echo "=================================================="
echo "üåê URL de l'application:"
echo "   https://white-river-053fc6703.2.azurestaticapps.net"
echo "   https://white-river-053fc6703.2.azurestaticapps.net/dashboard-atlas-unified.html"
echo ""
echo "üìä Dashboards disponibles:"
echo "   - dashboard-atlas-unified.html (Principal)"
echo "   - dashboard-v0.23-connected.html (Infrastructure)"
echo "   - dashboard-hyperv.html (Hyper-V)"
echo "   - dashboard-windowsupdate.html (Windows Update)"
echo "   - dashboard-veeam.html (Veeam B&R)"
echo ""

# Nettoyage
rm -f deploy.zip
rm -rf deploy-dist

echo "üßπ Nettoyage termin√©"